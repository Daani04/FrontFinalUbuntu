name: CI/CD Pipeline for Angular Project

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'  # Ajusta la versi贸n si es necesario

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run test -- --watch=false --browsers=ChromeHeadless

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.x'  # Ajusta la versi贸n si es necesario

    - name: Install dependencies
      run: npm install

    - name: Build Angular app
      run: npm run build --prod  # Cambia a "build" si no quieres producci贸n

    - name: Deploy to server
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      run: |
        # Crear el directorio .ssh y agregar la clave privada
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

        # Agregar la clave del servidor al archivo known_hosts para evitar el error de verificaci贸n de host
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

        # Crear el directorio de despliegue si no existe
        ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "mkdir -p $DEPLOY_PATH"

        # Sincronizar los archivos del proyecto con el servidor
        rsync -avz --delete --no-t --exclude 'tests' --exclude '.git' ./dist/ $USERNAME@$HOST:$DEPLOY_PATH

        # Opcional: Instalar dependencias en el servidor (si es necesario)
        ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "cd $DEPLOY_PATH && npm install --production"

        # Reiniciar el servidor Apache (ajusta si usas otro servidor)
        ssh -o StrictHostKeyChecking=no $USERNAME@$HOST "sudo systemctl restart apache2"
